apply plugin: 'com.android.application'
apply plugin: 'com.moowork.node'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.3.1'
    }
}

android {
    /* Cameras run older android systems, e.g.
    Sony Î± 6500:
    adb shell getprop ro.build.version.release
    4.1.2
    adb shell getprop ro.build.version.sdk
    16
    */
    compileSdkVersion 23
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "info.schnatterer.pmcaFilesystemServer"
        //noinspection MinSdkTooLow
        minSdkVersion 10
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 23
        versionCode 2
        versionName "0.1.1-SNAPSHOT"

    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        lintConfig file("lint.xml")
    }
    testOptions {
        unitTests {
            // Necessary for Robolectric
            includeAndroidResources = true
        }
    }
}

dependencies {
    compile 'com.github.ma1co.OpenMemories-Framework:framework:f8df350'
    provided 'com.github.ma1co.OpenMemories-Framework:stubs:f8df350'
    compile 'org.nanohttpd:nanohttpd-webserver:2.3.1'
    compile 'com.drewnoakes:metadata-extractor:2.14.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.test:core:1.2.0'
    //noinspection GradleDependency - newer versions don't work on Android 4.X
    testImplementation 'com.squareup.okhttp3:okhttp:3.4.1'
}

node {
    version = '12.18.3'
    download = true
}

build.dependsOn npmInstall

task copyNpmAssets() {
    dependsOn npmInstall
    // Note copying in android{} with "applicationVariants.all { variant -> variant.mergeResources.doLast"
    // directly to "${buildDir}/intermediates/merged_assets/${variant.dirName}/out/assets/js/libs/"
    // seems not to work.
    // The resources are copied ("gradle app:mergeReleaseResources") but seem to be overwritten by the contents in 
    // "src/main/assets/assets/js" when running "gradle build".
    // So we copy them into the sources dir. No beautiful solution. But it works after hours of frustration. 
    
    // TODO this could be improved by gulp or webpack and the likes.
    copy {
        from ([
                'node_modules/bootstrap/dist/js/bootstrap.bundle.min.js',
                'node_modules/bootstrap/dist/js/bootstrap.bundle.min.js.map',
                'node_modules/file-saver/dist/FileSaver.min.js',
                'node_modules/file-saver/dist/FileSaver.min.js.map',
                'node_modules/jszip/dist/jszip.min.js',
                'node_modules/jquery/dist/jquery.slim.min.js',
                'node_modules/vanilla-lazyload/dist/lazyload.min.js'
        ])
        into ("${rootDir}/app/src/main/assets/assets/js/libs/")
    }
    
    copy {
        from ([
                'node_modules/bootstrap/dist/css/bootstrap.min.css',
                'node_modules/bootstrap/dist/css/bootstrap.min.css.map'
        ])
        into ("${rootDir}/app/src/main/assets/assets/css/libs/")
    }
}